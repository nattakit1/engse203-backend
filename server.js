// server.js - My First Express Server
const express = require('express');
const app = express();
const PORT = 3000;

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Route (‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á) ‡πÅ‡∏£‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
app.get('/', (req, res) => {
  res.send('<h1>Hello from ENGSE203 Express Server111!</h1>');
});

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡πâ Server ‡∏£‡∏≠‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
app.listen(PORT, () => {
  console.log(`üöÄ Server is running on http://localhost:${PORT}`);
});

// server.js
const express = require('express');
require('dotenv').config(); // << ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô

const app = express();
const PORT = process.env.PORT || 3000; // << ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ PORT ‡∏à‡∏≤‡∏Å .env
const APP_NAME = process.env.APP_NAME;

app.get('/', (req, res) => {
  res.send(`<h1>Hello from ${APP_NAME}!</h1>`);
});

app.listen(PORT, () => {
  console.log(`üöÄ ${APP_NAME} is running on http://localhost:${PORT}`);
});

//... (‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏ô‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
const cors = require('cors'); // << Import cors

const app = express();
require('dotenv').config();

app.use(cors()); // << ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ: ‡πÉ‡∏ä‡πâ cors ‡∏Å‡∏±‡∏ö‡∏ó‡∏∏‡∏Å request
//... (‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠)

// ‡πÄ‡∏û‡∏¥‡πà‡∏° Route ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
app.get('/api/data', (req, res) => {
    res.json({ message: 'This data is open for everyone!' });
});

//... (‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏ô‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
const Joi = require('joi'); // << Import Joi

//...
app.use(helmet());
app.use(cors());
app.use(express.json()); // << ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç! ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ middleware ‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡πà‡∏≤‡∏ô JSON body

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Schema ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user
const userSchema = Joi.object({
    username: Joi.string().alphanum().min(3).max(30).required(),
    password: Joi.string().pattern(new RegExp('^[a-zA-Z0-9]{3,30}$')).required(),
    birth_year: Joi.number().integer().min(1900).max(new Date().getFullYear())
});

// Route ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á user
app.post('/api/users', (req, res) => {
    const { error, value } = userSchema.validate(req.body);

    if (error) {
        // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏™‡πà‡∏á 400 Bad Request ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
        return res.status(400).json({ message: 'Invalid data', details: error.details });
    }

    // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    console.log('Validated data:', value);
    res.status(201).json({ message: 'User created successfully!', data: value });
});
//...